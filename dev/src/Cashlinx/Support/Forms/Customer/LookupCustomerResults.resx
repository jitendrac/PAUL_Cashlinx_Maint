<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="select.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="select.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SgAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="cust_last_name.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="cust_first_name.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Address1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Address2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="City.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="State.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Postal.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="date_of_birth.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Ident_desc.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="issued_number.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="issuer_name.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="phone.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>