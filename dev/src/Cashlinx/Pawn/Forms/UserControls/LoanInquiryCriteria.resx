<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="loaninquiryCustomButtonAnd.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>