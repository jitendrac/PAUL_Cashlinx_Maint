<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tenderTypeSelector.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAByCAIAAAC9XkRfAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAALDAAA
        CwwBP0AiyAAAA8tJREFUaEPtkuFSWkkQheed8rT7LsZ1jUuMMS5BQURAwAtcEIUIAQSi6e7TM8zlspmq
        VOXfUKe6Tp/+eqjquubdu7/+qMzB+68H70ueXEsGXuqBNdx6eWbXf0e9OTy8PPwburLGJfsM8duVX5Ly
        rDn658qqnPO/SGhUPjrCLgxgv/LUHH+oHH8ocz0mA5UzXkNgkF3ZjuyivgOG3zQnJ9cn/0JVa1zye6bq
        vXltCh9vCh+rWgs3hQJ5CLlv3MiFxEB2RC+QRxWZ0083p59q+yT5KUbwOZKT/LpL2Jizz7f7dVaXvH52
        ZgFNcrwCwsO7lc+35vxL4/xL3apxfu48GbQOyJKaUygiErtsqNXcXPzX3OrCejWNi4uGnYpB7jDddYz3
        lMVMsdgqFu+KX0ktqXe2RehaO0UC6dQbbVckLLZM6bJdKrVKpTYbld+2SpckGolRjIzNKUHIVXJNFDBX
        5Q7ritRWj6RsWxpp4kjhXQjPL1ihlWoqlfvK9b3UhA2EUJVUKjRCFQywVgmVtwy1BAtvqjeJqCuCT6rV
        rgqeRppQ6zG6gl1hMutMmlqtV7v1hNYP1XcVc6M9THaXgFrP1Bt9USrq1+sk51NuAVDIIyslAdspveB4
        fbZvms1B827AFUaVNpskL+RpqlMlBQBPMCq21LMxrfaw1RpyhYF870IxdxngYf+KW28PTef+QdUhMxI/
        6pDvUIURryNpiQHMOQAw7gWL3T+YJHlMuo9JMkq6I/a+kPAUopYwSVjwEgJwLR6UxPR6T73+E1ffoM2H
        IB3vM/kRJf2xSQfjdDBJ03GaSlUvrcu3DOWWZOOJGYwgaQdjMxxOhsNvwwep8Nx6XttcQgxjedEjE3mQ
        XzOj0TPrUaoz3E49od1HIuRFC7hEXjNP45nqSQzVjKY2dIaAKTMMi6E6zk71Hc7N5Nv3yWQ2mVDNys/J
        c2vl+3wI2DLm+XnOmi7UoH3eafMJAB/z/NQ9sjCz2XL2fcl1thCzkEQqPMSJa3emHuavyAtmvniZz0XO
        oHWi/P9GO1h+cf5ilsuVaL18WXN1LZkXjPZpd4RFtw5Pb67Mar1ZrXytpUV1onYn2azWuYQZf51bs9n8
        2OqH5zf089vf9Ob19e2Vf6gwee8lb87bjcwLu1Pz9od/8Q+CB44niicKXiAIxK8onih4gSAQv6J4ouAF
        gkD8iuKJghcIAvEriicKXiAIxK8onih4gSAQv6J4ouAFgkD8iuKJghcIAvEriicKXiAIxK8onih4gSAQ
        v6J4ouAFgkD8iuKJghcIAvErCp7oJ24j10ZMiOejAAAAAElFTkSuQmCC
</value>
  </data>
</root>